What happens when you initialize a repository? Why do you need to do it?

	When a repository is initialized, Git creates a diretory with metadata. It must be done so files can now be committed.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging-area is located between the working area and the repository. All files you want to commit together must be in the staging area at the same time.

How can you use the staging area to make sure you have one commit per logical
change?

	Leaving there only the editted files needed to this change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When you want to develop new features and keep a working version of your code. Context switching.

How do the diagrams help you visualize the branch structure?

	Diagrams tell me where I am and where I should go to add another feature, to fix a bug or to test something.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Afte doing this, you can delete the label of the previous branch, because it will be accessed by the other one. It is represented in a way it is more clear to see.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Pros: (auto) it makes the work faster and (manual) you are the one controlling it.
	Cons: (auto) something wrong can be done and you don't notice and (manual) more mistakes can happen, typos for example.